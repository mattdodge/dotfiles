""""""""""""""""""""""
" INITIALIZE PLUGINS "
""""""""""""""""""""""
" Add plugins here, source this file, then run :PlugInstall
call plug#begin()
Plug 'editorconfig/editorconfig-vim'
Plug 'Shougo/deoplete.nvim'
Plug 'zchee/deoplete-jedi'
Plug 'scrooloose/nerdtree', { 'on':  'NERDTreeToggle' }
Plug 'christoomey/vim-tmux-navigator'
Plug 'tmux-plugins/vim-tmux-focus-events'
Plug 'kien/ctrlp.vim'
Plug 'kien/rainbow_parentheses.vim'
Plug 'scrooloose/nerdcommenter'
Plug 'fholgado/minibufexpl.vim'
Plug 'dense-analysis/ale'
Plug 'Vimjas/vim-python-pep8-indent'
Plug 'hashivim/vim-terraform'
Plug 'HerringtonDarkholme/yats.vim'
Plug 'posva/vim-vue'
Plug 'pearofducks/ansible-vim'
Plug 'jacoborus/tender.vim'
Plug 'NLKNguyen/papercolor-theme'
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'maxmellon/vim-jsx-pretty'
call plug#end()

""""""""""""""""""""
" GENERAL SETTINGS "
""""""""""""""""""""
set t_Co=256
set termguicolors
" colorscheme tender  " old dark theme
colorscheme PaperColor  " light & dark theme
" set background=light
set guifont=Hack
set mouse=

set nocompatible

set completeopt=menuone,longest,preview
"set tabstop=2 shiftwidth=0 softtabstop=2 noexpandtab
"set shiftwidth=0  " this makes shift width always the same as tab width, nifty!

" Our leader will be the comma key
let mapleader = ","

" Use escape to exit terminal mode
:tnoremap <Esc> <C-\><C-n>

" double semi-colon starts bash command
"nnoremap ;; :!

" backspace across line breaks
set backspace=indent,eol,start

" folding stuff
set foldenable
set foldmethod=indent
set foldlevel=99  " dont fold by default
nnoremap <space> za

" search stuff
set ignorecase
set smartcase
set incsearch
set showmatch
set hlsearch
nnoremap <leader><space> :noh<cr>
vnoremap // y/<C-R>"<CR>

" toggle line numbers
map <leader>N :set invnumber<CR>

set noswapfile
set nobackup
set nowritebackup
set hidden
set autoread " Automatically reload files from disk if they are changed

" More colors
autocmd ColorScheme *
            \ hi NeomakeErrorSign ctermfg=red |
            \ hi NeomakeWarningSign ctermfg=yellow |
            \ hi NeomakeInfoSign ctermfg=white |
            \ hi NeomakeMessageSign ctermfg=white

filetype plugin indent on
syntax on


"""""""""""""""""""""""""
" MOVEMENT / NAVIGATION "
"""""""""""""""""""""""""

map <c-j> <c-w>j
map <c-k> <c-w>k
map <c-l> <c-w>l
map <c-h> <c-w>h
noremap [v :vertical resize -5<cr>
noremap ]v :vertical resize +5<cr>
noremap [h :resize -5<cr>
noremap ]h :resize +5<cr>

" close a buffer without closing split/window
map <leader>d :bp<bar>bw! #<CR>

" move buffer to new split and set old split to prev buffer
map <leader>v :vsp<bar>bp<CR><c-w>l
map <leader>s :sp<bar>bp<CR><c-w>j

" Navigate through buffers with the tab key
map <Tab> :bn<CR>
map <S-Tab> :bp<CR>

" remap the join command to ,w (think 'wrap')
noremap <leader>w J

" make j/k move correctly on wrapped lines
map j gj
map k gk
" Wrap around lines at the end of lines
set whichwrap=b,s,h,l,<,>,[,]

noremap J 15j
noremap K 15k
noremap L $
noremap H ^
" nnoremap ; :


"""""""""""""""""""""""""
" PLUGIN SPECIFIC STUFF "
"""""""""""""""""""""""""
" airline
let g:airline_theme='bubblegum'
let g:airline#extensions#ale#enabled = 1
" Shorten normal/insert/visual mode
let g:airline_mode_map = {
      \ '__'     : '-',
      \ 'c'      : 'C',
      \ 'i'      : 'I',
      \ 'ic'     : 'I',
      \ 'ix'     : 'I',
      \ 'n'      : 'N',
      \ 'multi'  : 'M',
      \ 'ni'     : 'N',
      \ 'no'     : 'N',
      \ 'R'      : 'R',
      \ 'Rv'     : 'R',
      \ 's'      : 'S',
      \ 'S'      : 'S',
      \ 't'      : 'T',
      \ 'v'      : 'V',
      \ 'V'      : 'V',
      \ }

" python-neovim
let g:python3_host_prog = $HOME.'/.pyenv/versions/neovim/bin/python'
let g:loaded_python_provider = 1   " Python3 support only

" deoplete
let g:deoplete#enable_at_startup = 1

" ctrlp
let g:ctrlp_map = '<leader>t'     " I used to use command-t...
let g:ctrlp_custom_ignore = '\v[\/](node_modules|target|dist)|(\.(swp|pyc|git))$'
let g:ctrlp_working_path_mode = 'a'

" nerdtree
map <leader>n :NERDTreeToggle<CR>
let NERDTreeIgnore=['__pycache__', '\~$', '\.pyc$']

" vim-tmux-navigator was leaving around some extra chars
au FocusLost * silent redraw!

" rainbow_parentheses
au VimEnter * RainbowParenthesesToggle
au Syntax * RainbowParenthesesLoadRound
au Syntax * RainbowParenthesesLoadSquare
au Syntax * RainbowParenthesesLoadBraces

" typescript
let g:yats_host_keyword = 1
au BufRead *.ts set filetype=typescript
au BufRead *.tsc set filetype=typescript
au BufRead *.tsx set filetype=typescript

" ALE (linting)
let g:ale_virtualenv_dir_names = [$HOME.'/.pyenv/versions/neovim']
let g:ale_linters = {
\	'javascript': ['eslint'],
\	'typescript': ['eslint', 'tsserver'],
\	'python': ['flake8', 'mypy'],
\}
let g:ale_fixers = {
\	'javascript': ['prettier'],
\	'typescript': ['prettier'],
\	'python': ['black'],
\}
let g:ale_hover_cursor = 0
let g:ale_fix_on_save = 1
let g:ale_python_flake8_options = '--ignore=E501,W503'
let g:ale_javascript_eslint_options = '--cache'
let g:ale_typescript_eslint_options = '--cache'

function! Linting()
	return ale#engine#IsCheckingBuffer(bufnr("%")) ? 'linting...' : ''
endfunction
call airline#parts#define_function('linting', 'Linting')
let g:airline_section_y = airline#section#create_right(['linting'])

" terraform
let g:terraform_align = 1
let g:terraform_fmt_on_save = 1
" Treat all HCL files as a terraform file type
autocmd BufRead,BufNewFile *.hcl set filetype=terraform

"""""""""""""""""""""""""
" SETTINGS BY FILE TYPE "
"""""""""""""""""""""""""

" Python specific stuff
autocmd BufEnter *.py set ai sw=4 ts=4 sta et fo=croql
autocmd BufEnter *.py let &colorcolumn=join(range(91,999),",")
autocmd BufEnter *.py highlight ColorColumn ctermbg=236 guibg=#3A3A3A

" JavaScript specific stuff
"autocmd Filetype javascript setlocal noet ts=2 sts=2 sw=2
"au BufEnter *.ts set noet sw=2 ts=2 sts=2
au BufEnter *.json set noet sw=2 ts=2 sts=2
au BufEnter *.vue set noet sw=2 ts=2 sts=2


" CSS specific stuff
autocmd BufEnter *.scss setlocal ts=2 sts=2 sw=2 expandtab
autocmd BufEnter *.css setlocal ts=2 sts=2 sw=2 expandtab

" HTML files
autocmd Filetype *.html setlocal ts=2 sts=2 sw=2 noexpandtab

" YAML/Terraform Files
au FileType yaml set sw=2 expandtab
au BufEnter *.tf set sw=2 ts=2 sts=2 noexpandtab


